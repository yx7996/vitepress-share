import{_ as t,c as p,o as e,ag as l,j as a,t as n}from"./chunks/framework.Ds6Eueu6.js";const u=JSON.parse('{"title":"Markdown Vitepress 内置扩展语法","description":"","frontmatter":{"favorite_fruit":"Banana","current_salary":5000,"the_best_language":"Java"},"headers":[],"relativePath":"docs/knowledge/markdown/vitepress.md","filePath":"docs/knowledge/markdown/vitepress.md"}'),h={name:"docs/knowledge/markdown/vitepress.md"},k={class:"info custom-block"};function r(i,s,d,o,c,g){return e(),p("div",null,[s[1]||(s[1]=l(`<h1 id="markdown-vitepress-内置扩展语法" tabindex="-1">Markdown Vitepress 内置扩展语法 <a class="header-anchor" href="#markdown-vitepress-内置扩展语法" aria-label="Permalink to &quot;Markdown Vitepress 内置扩展语法&quot;">​</a></h1><h2 id="代码组" tabindex="-1">代码组 <a class="header-anchor" href="#代码组" aria-label="Permalink to &quot;代码组&quot;">​</a></h2><ul><li>功能</li></ul><blockquote><p>类似于 HTML 中的 Tab 页</p></blockquote><ul><li>代码示例</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>:::code-group</span></span>
<span class="line"><span>\`\`\`Java [Java]</span></span>
<span class="line"><span>public static void main(String args[]) {</span></span>
<span class="line"><span>    System.out.print(&quot;Hello World !&quot;);</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>\`\`\`</span></span>
<span class="line"><span>\`\`\`py [Python]</span></span>
<span class="line"><span>print(&quot;Hello World !&quot;);</span></span>
<span class="line"><span>\`\`\`</span></span>
<span class="line"><span>\`\`\`js [Javascript]</span></span>
<span class="line"><span>console.log(&quot;Hello World !&quot;);</span></span>
<span class="line"><span>\`\`\`</span></span>
<span class="line"><span>:::</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">效果</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-pnP2W" id="tab-atvfo89" checked><label data-title="Java" for="tab-atvfo89">Java</label><input type="radio" name="group-pnP2W" id="tab-h2XRW5T"><label data-title="Python" for="tab-h2XRW5T">Python</label><input type="radio" name="group-pnP2W" id="tab-KZZKihM"><label data-title="Javascript" for="tab-KZZKihM">Javascript</label></div><div class="blocks"><div class="language-Java vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String args[]) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello World !&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello World !&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">;</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello World !&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div></div></div></div><h2 id="frontmatter" tabindex="-1">frontmatter <a class="header-anchor" href="#frontmatter" aria-label="Permalink to &quot;frontmatter&quot;">​</a></h2><ul><li>功能</li></ul><blockquote><p>可以使用该功能，覆盖站点级别或主题级别的配置选项。</p></blockquote><ul><li>使用方式 <ol><li>在你需要用到这个功能的 md 文件 <code>顶部</code> 定义你的数据（<code>YAML 或 JSON 格式</code>）。</li><li>在对应的地方通过 <code>$frontmatter</code> 进行调用。</li></ol></li><li>代码示例</li></ul><div class="warning custom-block"><p class="custom-block-title">注意</p><p>当前 md 文件顶部已经定义了三组数据，由于官网是使用的 <code>YAML</code> 格式的数据，本文则使用 <code>JSON</code> 格式的数据。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>---</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>    &quot;favorite_fruit&quot;: &quot;Banana&quot;,</span></span>
<span class="line"><span>    &quot;current_salary&quot;: 5000,</span></span>
<span class="line"><span>    &quot;the_best_language&quot;: &quot;Java&quot;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>---</span></span></code></pre></div><p>这里要注意，千万别忘记写那三个 <code>---</code> 符号！</p></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>最爱吃的水果：{{$frontmatter.favorite_fruit}}</span></span>
<span class="line"><span>当前工资：{{$frontmatter.current_salary}}</span></span>
<span class="line"><span>最好的语言：{{$frontmatter.the_best_language}}</span></span></code></pre></div>`,13)),a("div",k,[s[0]||(s[0]=a("p",{class:"custom-block-title"},"效果",-1)),a("p",null,"最爱吃的水果："+n(i.$frontmatter.favorite_fruit),1),a("p",null,"当前工资："+n(i.$frontmatter.current_salary),1),a("p",null,"最好的语言："+n(i.$frontmatter.the_best_language),1)]),s[2]||(s[2]=l(`<h2 id="自定义容器" tabindex="-1">自定义容器 <a class="header-anchor" href="#自定义容器" aria-label="Permalink to &quot;自定义容器&quot;">​</a></h2><ul><li>功能</li></ul><blockquote><p>当前 md 文件中，你所看到的 <code>注意</code>、<code>效果</code> 都是通过自定义容器实现的。</p></blockquote><ul><li>代码实现 &amp; 说明</li></ul><blockquote><p><a href="https://vitepress.dev/zh/guide/markdown#custom-containers" target="_blank" rel="noreferrer">VitePress - 自定义容器</a></p></blockquote><h2 id="代码块高亮" tabindex="-1">代码块高亮 <a class="header-anchor" href="#代码块高亮" aria-label="Permalink to &quot;代码块高亮&quot;">​</a></h2><ul><li>功能</li></ul><blockquote><p>Vitepress 使用 <code>Shiki</code> 让代码带上色彩，让他们更容易被阅读 &amp; 查看。</p></blockquote><ul><li>代码实现</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>\`\`\` java</span></span>
<span class="line"><span>public static void main(String args[]) {</span></span>
<span class="line"><span>    System.out.print(&quot;Hello Shiki&quot;);</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>\`\`\`</span></span>
<span class="line"><span>\`\`\` ts</span></span>
<span class="line"><span>let num: number = 10</span></span>
<span class="line"><span>\`\`\`</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">效果</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String args[]) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello Shiki&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> num</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span></span></code></pre></div></div><div class="tip custom-block"><p class="custom-block-title">拓展</p><p><code>Skiki</code> 可以支持很多种语言，详细请看：<a href="https://shiki.tmrs.site/languages" target="_blank" rel="noreferrer">https://shiki.tmrs.site/languages</a></p></div><h2 id="代码块中行高亮" tabindex="-1">代码块中行高亮 <a class="header-anchor" href="#代码块中行高亮" aria-label="Permalink to &quot;代码块中行高亮&quot;">​</a></h2><ul><li>功能</li></ul><blockquote><p>可以让代码块中某一行或者某几行进行高亮展示</p></blockquote><ul><li>代码实现</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>\`\`\`java{3,8-17}</span></span>
<span class="line"><span>public static void main(String[] args) {</span></span>
<span class="line"><span>    int[] values = { 3, 1, 6, 2, 9, 0, 7, 4, 5, 8 };</span></span>
<span class="line"><span>    bubbleSort(values);</span></span>
<span class="line"><span>    System.out.println(Arrays.toString(values));</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>public static void bubbleSort(int[] values) {</span></span>
<span class="line"><span>    int temp;</span></span>
<span class="line"><span>    for (int i = 0; i &lt; values.length; i++) {</span></span>
<span class="line"><span>        for (int j = 0; j &lt; values.length - 1 - i; j++) {</span></span>
<span class="line"><span>            // 减i原因：内层循环，每循环完一趟就在数组末产生一个最大数，即最大数就不用比较了。</span></span>
<span class="line"><span>            if (values[j] &gt; values[j + 1]) {</span></span>
<span class="line"><span>                temp = values[j];</span></span>
<span class="line"><span>                values[j] = values[j + 1];</span></span>
<span class="line"><span>                values[j + 1] = temp;</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>\`\`\`</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">效果</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] args) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] values </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line highlighted"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    bubbleSort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(values);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Arrays.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(values));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bubbleSort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] values) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> temp;</span></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> values.length; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> values.length </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i; j</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line highlighted"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // 减i原因：内层循环，每循环完一趟就在数组末产生一个最大数，即最大数就不用比较了。</span></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (values[j] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> values[j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) {</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                temp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> values[j];</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                values[j] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> values[j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                values[j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> temp;</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div><div class="tip custom-block"><p class="custom-block-title">拓展</p><p>你也可以在某一行代码中增加 <code>// [!code highlight]</code> 进行代码高亮。</p><ul><li>代码示例 &amp; 说明</li></ul><blockquote><p><a href="https://vitepress.dev/zh/guide/markdown#line-highlighting-in-code-blocks" target="_blank" rel="noreferrer">VitePress - 在代码块中实现行高亮</a></p></blockquote></div><h2 id="代码块中聚焦" tabindex="-1">代码块中聚焦 <a class="header-anchor" href="#代码块中聚焦" aria-label="Permalink to &quot;代码块中聚焦&quot;">​</a></h2><ul><li>功能</li></ul><blockquote><p>模糊代码块中其他代码，只保留被聚焦的代码清晰度。</p></blockquote><ul><li>代码实现 &amp; 说明</li></ul><blockquote><p><a href="https://vitepress.dev/zh/guide/markdown#focus-in-code-blocks" target="_blank" rel="noreferrer">VitePress - 代码块中聚焦</a></p></blockquote><h2 id="代码块行号" tabindex="-1">代码块行号 <a class="header-anchor" href="#代码块行号" aria-label="Permalink to &quot;代码块行号&quot;">​</a></h2><ul><li>功能</li></ul><blockquote><p>让代码块中增加行号，方便查找、阅读。</p></blockquote><ul><li>代码实现 &amp; 说明</li></ul><blockquote><p><a href="https://vitepress.dev/zh/guide/markdown#line-numbers" target="_blank" rel="noreferrer">VitePress - 代码块行号</a></p></blockquote><h2 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h2><p>Vitepress 中还有很多 Markdown 扩展方案，大家可以直接到 Vitepress 官网进行学习 &amp; 练习。</p>`,31))])}const y=t(h,[["render",r]]);export{u as __pageData,y as default};
